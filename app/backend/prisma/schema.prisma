generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  roleId    String
  role      Role     @relation(fields: [roleId], references: [id])
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  campaignsCreated Campaign[] @relation("CampaignCreator")
  campaignTargets  CampaignTarget[]
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  permissions Json     @default("{}")
  users       User[]
}

model Campaign {
  id          String   @id @default(uuid())
  name        String
  subject     String
  body        String   @db.Text
  fromName    String
  fromEmail   String
  status      String   @default("draft")
  sandbox     Boolean  @default(true)
  createdById String
  createdBy   User     @relation("CampaignCreator", fields: [createdById], references: [id])
  createdAt   DateTime @default(now())
  targets     CampaignTarget[]
}

model CampaignTarget {
  id          String   @id @default(uuid())
  campaignId  String
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  status      String   @default("pending")
  trackingId  String   @unique @default(uuid())
  @@unique([campaignId, userId])
}