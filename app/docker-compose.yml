version: '3.9'

services:
  db:
    image: postgres:14-alpine
    container_name: phishguard-db
    environment:
      POSTGRES_DB: phishguard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - phishguard-network

  redis:
    image: redis:7-alpine
    container_name: phishguard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - phishguard-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: phishguard-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/phishguard
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - phishguard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: phishguard-frontend
    environment:
      - VITE_API_URL=http://localhost:3000
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - phishguard-network

volumes:
  postgres_data:
  redis_data:

networks:
  phishguard-network:
    driver: bridge