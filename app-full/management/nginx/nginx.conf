# Configuration Nginx pour PhishGuard BASIC
# =========================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status "$http_user_agent" "$http_x_forwarded_for" '
                        '$request_time $upstream_response_time "$request_body"';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffers
    client_body_buffer_size 128k;
    client_max_body_size 64m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;

    # Content Security Policy
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com;
        style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com;
        img-src 'self' data: https:;
        font-src 'self' https://cdnjs.cloudflare.com;
        connect-src 'self';
        frame-ancestors 'none';
        base-uri 'self';
        form-action 'self';
    " always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=1r/s;

    # Upstream PHP-FPM
    upstream php-fpm {
        server app:9000;
        keepalive 8;
    }

    # Configuration du serveur principal
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /var/www/html;
        index index.php index.html index.htm;

        # Logs spécifiques
        access_log /var/log/nginx/phishguard-access.log main;
        error_log /var/log/nginx/phishguard-error.log warn;

        # Protection contre les attaques
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 405;
        }

        # Blocage des bots malveillants
        if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
            return 403;
        }

        # Page d'accueil
        location = / {
            try_files $uri $uri/ /management/index.html;
        }

        # Interface de gestion
        location /management/ {
            try_files $uri $uri/ /management/index.html;
            
            location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass php-fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                include fastcgi_params;

                # Sécurité supplémentaire
                fastcgi_param HTTP_PROXY "";
                fastcgi_read_timeout 300;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 4 256k;
                fastcgi_busy_buffers_size 256k;
            }



            # Ajout à nginx/nginx.conf dans le bloc server

# URLs de tracking courtes
location ~ ^/t/([a-zA-Z0-9]{32})$ {
    try_files $uri /management/redirect.php;
}

location ~ ^/p/([a-zA-Z0-9]{32})\.gif$ {
    try_files $uri /management/redirect.php;
}

# Redirection par défaut pour les URLs de tracking
location /management/redirect.php {
    try_files $uri =404;
    fastcgi_pass php-fpm;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
    
    # Log spécial pour le tracking
    access_log /var/log/nginx/tracking.log main;
}
        }

        # API endpoints
        location /management/api/ {
            limit_req zone=api burst=20 nodelay;
            
            try_files $uri $uri/ =404;
            
            location ~ \.php$ {
                try_files $uri =404;
                fastcgi_pass php-fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;

                # Headers de sécurité API
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
                
                # Log des requêtes API pour audit
                access_log /var/log/nginx/api-access.log security;
            }
        }

        # Authentification (rate limiting strict)
        location /management/api/auth/ {
            limit_req zone=login burst=3 nodelay;
            
            location ~ \.php$ {
                try_files $uri =404;
                fastcgi_pass php-fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
                
                # Log spécial pour les tentatives de connexion
                access_log /var/log/nginx/auth-access.log security;
            }
        }

        # Pages de formation (tracking autorisé)
        location ~ ^/(training|warning)\.php$ {
            limit_req zone=general burst=10 nodelay;
            
            try_files $uri =404;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Headers spéciaux pour les pages de formation
            add_header X-Frame-Options "DENY" always;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # Fichiers statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header Vary "Accept-Encoding";
            
            # Sécurité pour les assets
            location ~* \.(js|css)$ {
                add_header Content-Type "text/plain" always;
            }
        }

        # Blocage des fichiers sensibles
        location ~* \.(sql|log|conf|ini|md|txt|bak|old|tmp)$ {
            deny all;
            return 404;
        }

        # Blocage des répertoires système
        location ~ /\. {
            deny all;
            return 404;
        }

        location ~* /(config|utils|storage)/ {
            deny all;
            return 404;
        }

        # Page d'erreur personnalisée
        error_page 404 /error.html;
        error_page 500 502 503 504 /error.html;

        location = /error.html {
            root /var/www/html;
            internal;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Monitoring endpoint (accès restreint)
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }

    # Configuration HTTPS (à activer en production)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name _;
        root /var/www/html;
        index index.php index.html;

        # Certificats SSL (à configurer)
        ssl_certificate /etc/ssl/phishguard/cert.pem;
        ssl_certificate_key /etc/ssl/phishguard/key.pem;

        # Configuration SSL sécurisée
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_prefer_server_ciphers on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Même configuration que HTTP
        include /etc/nginx/conf.d/phishguard-common.conf;
    }
}
